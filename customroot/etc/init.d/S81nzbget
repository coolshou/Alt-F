#!/bin/sh

DESC="NZBGet is a binary newsgrabber for nzb files"
NAME=nzbget
TYPE=user
NEED_ALTF_DIR=1

RC_USER=nzbget
RC_USERN=21
RC_GROUP=TV
RC_GROUPN=200
RC_DESC="NZBget user"

CONFF=/etc/nzbget.conf
LOG_DIR=/var/log/nzbget
PID_DIR=/var/run/nzbget
RC_PIDFILE=$PID_DIR/nzbget.pid
DATA_DIR=$(sed -n '/^MainDir=/s/MainDir=\(.*\)/\1/p' $CONFF)
BOX_SSL=/etc/ssl/certs/server
NZB_SSL=/etc/ssl/certs/nzbget

OPTS="--daemon -c $CONFF"

. /etc/init.d/common

check_net() {
	network=$(hostname -i | awk -F. '{printf "%d.%d.%d.*", $1,$2,$3}')
	if ! grep -q "^AuthorizedIP.*$network" $CONFF; then
		sed -i "s/^AuthorizedIP.*/AuthorizedIP=127.0.0.1,$network/" $CONFF
	fi
}

check_certs() {
	if ! test -f $NZB_SSL.crt -a -f $NZB_SSL.key ; then
		ln $BOX_SSL.crt $NZB_SSL.crt
		ln $BOX_SSL.key $NZB_SSL.key
		chown nzbget:root $NZB_SSL.*
		chmod og-r $NZB_SSL.*
	fi
}

if test "$(basename $DATA_DIR)" = "Public"; then
	check_user $CONFF
	echo "Fail: you have to configure NZBget first."
	exit 1
fi

for i in $LOG_DIR $PID_DIR "$DATA_DIR"; do
	if ! test -d "$i"; then mkdir -p "$i"; fi
done

chmod g+rwxs "$DATA_DIR"
chmod g+rw,o-r $CONFF

check_user $CONFF $LOG_DIR $PID_DIR "$DATA_DIR"

case "$1" in
	start) 
		check_net
		check_certs
		start $NAME --chuid $RC_USER:$RC_GROUP -- $OPTS
		;;
	stop) stop $NAME ;;
	status) status $NAME ;;
	restart) restart $NAME ;;
	*) usage $0 "start|stop|status|restart" ;;
esac

